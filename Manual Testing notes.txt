Manual Testing

Module 1: Software Testing concepts 

Software Testing : 

System S/W : 

e.g - Operating system , Drivers 

Programming Software: 

e.g -  Compilers , Interpreters , debugging tools etc ..

Application Software : 

Web apps , Stand alone apps , mobile apps , Silver lite , Mainframe apps , etc ...


Testing : 


The process of checking developed software is working as per client Business requirements or not .

-> finding defects 
-> quality 

prime motto of testing is to provide 

a quality and risk free product ..


What do we test in now-a-days ?

-> Functionalities
-> GUI 
-> Usability 
-> Performance 
-> Load 
-> Security 
-> compatablity etc ...

how do we test ?

Manual Testing : 

If any test activity carried out using Man effort then it is called Manual Testing

Automation Testing:

If any test activity carried out using a tool /program/script then it is called Automation Testing


Software Testing terminologies :

1. Product

if a software application developed for multilple customer then it is called Product

e.g NCR --> ATM machine and Software

e.g Fidelity --> Banking product 

2. Project 

if a software application developed for single customer then it is called Project

--> for HDFC only

TCS --> using Fidelity product for Bank of America 

Error : 

Defect / Bug : 

Fault/Failure/Incident: 

Module 2: Software Testing Project

Module 3: Agile Methodlogy and JIRA tool 

Module 4: SQL or Database Testing



==============================================================================
S/W Testing is nothing but 

checking are we developing right software or not  and also 
checking developed software is working as per client Business requirements or not .


S/W Testing = Verification + Validation

Verification nothing but reviewing some kind of documents 

Validation is nothing testing the code 


======================================================
Roles/Duties of Tester :

1) Understanding the AUT (Application under Test) / Domain Knowledge 
2) Formal Testing (Writing and executing test cases)
3) Adhoc Testing or Informal Testing (No Test cases)
4) Finding defects & reporting to developer 
5) ReTesting and Regression Testing 
6) Develop Test scripts 
7) Executing the test scripts 
8) Analyse the results 
9) Prepare TEst reports 

=============================================================

Software Testing Principles : 
1) Exhaustive testing is impossible
2) Defect Clustering
3) Pesticide Paradox 
4) Early Testing 
5) Testing is application dependent / sometimes situation dependent
6) Testing should show presence of defects
7) Absence of defects is fallacy 


======================================================

SDLC (Software Development Life Cycle)



						SDLC Models 
						
						
		1) Sequential 	Models				2) Iterative or Incremental Models				
						
1) Sequential 	Models
   - Waterfall Model 
   - V Model 
   

Waterfall Model : 

- small projects
- Requirements Clear
- Each Phase is freezed once completed

V Model :

- small projects

- when Requirements are not Clear

2) Iterative or Incremental Models	

- RAD Model (Rapid Application Development)
		--> Big Projects
		--> to be completed fastly
		
- Prototype Model 
		--> Big Projects 
		--> when customer doen't have requirements clear and refer to some already existing app 
		
- Spiral Model
		--> Big Projects
		--> Requirements is dependent on other requirements

- Agile Model 		


Software Testing Approaches :

						Static Testing						Dynamic Testing
						
						
Review : Examing a project related task 

Types of Reviews :

1) Requirment reviews :  domain experts / SME (Subject  Matter Experts)

BRS (Buisness Requirment Specifictaions)
BRD (Buisness Requirment Document)

2) Design Review :  Technical Experts (Solution Architects or System  Architects) 

3) Code Reviews : Senior Developers 
Coding standards 

4) Test case Reviews : Test Lead 

Formal Review : If any review activity carried out by following proper review procedures 


Inspection : If a formal review carried out while execution of task .


Audit :  If a formal review carried out after execution of task .

Peer Reviews : by team members 

Walk Throughs : Knowledge Transfers 

e.g : MTP (Master Test Plan ) Walkthrough 
or  Test Strategy 

--------------------------
dynamc Testing :

1) Unit Testing : 
Smallest part of source code like method , function , procedure  are called units .


2) Integration Testing : 

once all units are tested , programmer will combine all units and test his code . 

3) White BOx testing : (done by developers)

Unit Testing + Integration Testing 

4) System Testing : (Done by testers)

Once Integration Testing completed , developer will compiled the soucre code into an executable code (Build) 

for , URL /  .apk  / .ipa / .exe 

5) User Acceptance Testing (UAT) : (Done by Testers/ Client / some 33rd party Testing companies)

6) Black Box Testing :

System Testing + User Acceptance Testing (UAT) 

UAT (User Acceptance Testing) :

Testing carried out by the end user on the delivered product to make sure 
whether it is ready for live production or not .

Two stages :

1. Alpha Testing 

It is a first level of Acceptance testing carried out at company premises

2. Beta Testing 

It is a last level of Acceptance testing carried out at customer/client premises

-----------------------------------------------------------------------------

Functional System Testing Types:

1) Smoke Testing 
2) Formal Testing 
3) ReTesting
4) Regression Testing 
5) Priority based testing 
6) Sanity Testing 
7) End-to-End 
8) Ahdoc TEsting 

Special Functional System Testing :

1)Benchmark Testing 
2) Exploratory Testing 
3) Monkey Testing or Gorilla Testing 

Non-Functional System Testing Types:

1) UI TEsting or GUI Testing 
2) Usability Testing or User Friendliness 
3) Performance Testing 

Responsiveness
Stability

i) reposnse time
ii) processing time
iii) concurrent user volume 

Load Testing :

-> Stress Testing 
-> Soak Testing
-> Spike Testing
-> Volume TEsting 

4) Globalization or Internationalization or I18N Testing 

5)Localization or L10N testing 

6)Compatability 

7)Recovery Testing 

8)Installation Testing 

9)UnInstallation Testing 


Module 2:

Software Testing Project 


STLC 


-Test Planning 

Test Strategy : a high level documents which gives information about how testing activities 
carried out for project.

Test Plan : a detailed document which gives information about how testing activities 
carried out for project.

Test plan template : 

1. Project Overview
2. Document references 
3. Scope of testing 
	3.1 In scope
	3.2 out scope
4. Test Strategy
5. Test Environment
6. Test Deliverables 
7. staffing plan 
8. Risk planning and mitigation 
9. Work schedules
10. Approvals 
==================================================
Test Analysis

RCN - Requirements Clarification Notes 


=================================================
Test Design 

Test Scenario:

It is a behaviour/journey/functionality to be tested in application under test.

what to test ?

???????????????????????????????????????????????????????
Assignment -1 

write test scenarios for Facebook home page 

and send the template to below email add 

riyazsirnotes@gmail.com

?????????????????????????????????????????????????????????????


-----------------------------------------------------------

Test Case :

A step by step procedure which includes the pre-conditions , input data, expected results 
and actual results to validate a functionality is called test case.


how to test ?


---------------------------------------------------
Test Management tool 

Cucumber Studio

how to create an Cucumber studio account ?

https://cucumber.io/tools/cucumberstudio/

Click on "Try CucumberStudio"

naveenkumar.alrounder@gmail.com

Newpass@123369

--> Welcome
What can CucumberStudio help you do?

here , select "Learn BDD" and click on next 

--> What is your company name?
Livetech
--> job role
select QA Engineer

click on next 

--> Now, letâ€™s create a project
give some project name 
e.g AdactinHotelApp
click "Start trial"


?????????????????????????????????
Assignment -2 
completed the remaining Test cases for AdactinHotelApp Login Scenario
????????????????????????????????????????????????????????????????????????
Assignment - 3
Create cucumber studio account and send the dashboard screenshot

to below email :
riyazsirnotes@gmail

?????????????????????????????????????????????????????????????????????????????


Requirements				User Stories
	|							|
Test Scenarios				Behaviours/Features
	|							|
Test Cases					Scenarios

#Author: your.email@your.domain.com
#Keywords Summary :
#Feature: List of scenarios.
#Scenario: Business rule through list of steps with arguments.
#Given: Some precondition step
#When: Some key actions
#Then: To observe outcomes or validation
#And,But: To enumerate more Given,When,Then steps
#Scenario Outline: List of steps for data-driven as an Examples and <placeholder>
#Examples: Container for s table
#Background: List of steps run before each of the scenarios
#""" (Doc Strings)
#| (Data Tables)
#@ (Tags/Labels):To group Scenarios
#<> (placeholder)
#""
## (Comments)
#Sample Feature Definition Template
@tag
Feature: Title of your feature
  I want to use this template for my feature file

  @tag1
  Scenario: Title of your scenario
    Given I want to write a step with precondition
    And some other precondition
    When I complete action
    And some other action
    And yet another action
    Then I validate the outcomes
    And check more outcomes

  @tag2
  Scenario Outline: Title of your scenario outline
    Given I want to write a step with <name>
    When I check for the <value> in step
    Then I verify the <status> in step

    Examples: 
      | name  | value | status  |
      | name1 |     5 | success |
      | name2 |     7 | Fail    |


???????????????????????????????????????????????????
Assignment-4

In https://adactinhotelapp.com/
Complete the remaining test case/Scenarios for 
Login functionality in CucumberStudio
?????????????????????????????????????????????????????

Assignment-5

write down the TEst case /Scenario for 
Registration functionality (Happy path) 
in CucumberStudio
??????????????????????????????????????????????????????????


Test Case Design Techniques :

1) Equivalence Class Partitioning (ECP)
2) Boundary value Analysis (BVA)
3) Decission Table Testing
4) State Transition Testing
5) Error Guessing 

1) Equivalence Class Partitioning (ECP) :


3)Descission Table Testing
??????????????????????????????????????????????????
Assignment-6
There is a Food Delivery App 


Assume 3 inputs 


Old Customer		15 % discount 	

New Customer 		35% discount

Coupon 				25% discount			

Come up with Decission table and Test cases to test this app


hint : no of inputs 3 
						   3
so no of combinations are 2    = 8


send email to riyazsirnotes@gmail.com
???????????????????????????????????????????????????????????????????


??????????????????????????????????????????????????
Assignment-7

In https://adactinhotelapp.com/ 

come up with State Transition diagram for the flow from login to 
"Booking Confirmation" 

????????????????????????????????????????????????????????????????????????

5) Error Guessing Techniques

based on experience in Domain writing the test cases as per errors 



----------------------------------------------------------------
Test Execution Phase 

1) Build Deployment
2) Build Acceptance Testing or Smoke Testing on Initial build
3) Executing Test cases 
4) Document and Report Defects
5) Conducting Retesting on Modified build
6) Conducting  Regression Testing on Modified build
7) End-to-End testing on final or stable build 


1) Build Deployment

DD  Deployment Document

SRN Software Release Notes 

2) Build Acceptance Testing or Smoke Testing on Initial build

3) Executing Test cases 

4) Document and Report Defects



Defect Template :

Defect # or id : 

unique name given to defect ( Project use nanming convention)


Defect Summary :

high level detail about defect 

Defect Description : 

detailed message about defect

Reproducible (Y/N) :

Y - means defect is always occuring 
N -  means occuring intermitent(coming and going at intervals : not continuous)

Reproducible Steps :
Steps from test case till the defect occurance (including test data)

Defect Severity : 

how serious the defect is (business impact) 

Blocker 
Critical
Medium 
Low

is given by Tester 

Defect Priority :

the order in which defect to be resolved 

is given by Developer 

Very High
high
medium
low


Defect Status : 

New  /  Open  / Assigned  / Rejected / Duplicate /  Postpone or Defered  / ReTest / Closed 

Detected By :

Tester name

Detected in Version :

build version

Fixed By :

Developer name 

Fixed Date:
Date fixed by developed

Date Of Closure:

Date of retesting 

??????????????????????????????????????????????????
Assignment-8

In https://adactinhotelapp.com/

use Defect Template and find atleast 4 defects 


and send to below email id 

riyazsirnotes@gmail.com

??????????????????????????????????????????????????????? 


Bug Life Cycle or Defect Life Cycle 


Bug Severity :

this tells about the seriousness of the defect or how much it impacts the business flow 

this will be given by tester 

Bug Priority :

the order in which bug to be resolved 

this will be given by developer 

							Defect Categorization	
							
							
		Severity														Priority
		
	Very High --> Blocker/ Show stopper --> Catastrophic                Very High  --> P0
	High      --> Critical --> Damage									High       --> P1
	Medium	  --> Major	--> hindering									Medium     --> P2
	Low		  --> Minor --> Cosmetic									Low        --> P3
	
		
		
Very High --> Blocker/ Show stopper --> Catastrophic 

This defects indicates nothing can be proceed further 

e.g Application is getting crashed , Login not working 


High      --> Critical --> Damage 


The main / basic functionality of the app is not working 

e.g : Funds tranfers in banking app is not working 

Placing an order for the item added in the cart is not working


Medium	  --> Major	--> hindering		

It causes some undesirable behaviour in flows but still functionality will be working 

e.g : 

Sending an email and a confirmation dialog box not appearing 

Low		  --> Minor --> Cosmetic	

Defects related to spelling mistakes , colors , alignment issues 		



High Sevirity  and High Priority :

e.g Login functionality not working 

Low Servity and Low Priority :

a spelling mistake in a page not frequently visited 

Low Priority and High Sevirity : 

app refering old logo instead of new logo 
or
spelling mistake in Company or brand name 

High Priority and Low Severity :

for e.g in registration flow password and confirm password fields are not masked .


-------------------------------------------------------------------------------------

Module 3:

Agile Methodlogy and JIRA tool 

Agile is a SDLC Model

Agile is a incremantal and iterative model 


Agile Principles : 

1. Customer no need to wait for long time 
2. We develop , test and release piece of software to the customer with few modules or features 
3. we can accept / accomodate requirement changes 
4. There will be good communication between customer , BA's Business Analysts , Developers , testers etc .

Disadvantages of Agile :

-> less focus on design and planning 
-> less documentation 

Scrum Framework : 

Scrum is nothing but group of people working for cause 

Group of people are called "Scrum Team" aor "Squad"


Scrum Team involves following roles or people : 

1. Product owner (PO) or Project Manager or Delivery Manager (1)
2. Business Analyst (1)
3. Scrum Master (SM) (1)
4. Solution Architects (SA) ( 1 or 2)
5. UX Designer (UX) (1)
6. Developers 
	- FontEnd Developers (FE) - (3 to 4)
			- Web
			- android
			- iOS 
	- Backend Developers (BE) - (2 to 3)
	- Database Engineer - ( 0 to 1)
7. Testers  - ( 2 to 3)
	- Manual (Web / Mobile /API )
	- Automation (Web / Mobile /API )
8. Dev ops (1 to 2 ) 


Total : 13 or 19 


Product owner (PO) : 

-> define the fetaures / behaviours / journeys / functionality of the application

-> priortize the fetaures as per market needs 

-> accept or reject the work results 

Scrum Master (SM) : 

will have more knowledge on Scrum methodologies (Certified Scrum Master)

He will be facilitating / driving the agile process

sending invites for different ceremonies or meeting 


Business Analyst : 

he/she will have more knowledge on business and will interact with client and get the business rules 
and helps Product Owner in preparing User stories (requirements)

Solution Architects:

he/she will be deisgning Project Architecture or Sequence diagrams  (System deisgn or High Level Design)

UX Designer :

will deisgn lowel deisgn using some tools (figma , zeplyn etc ..)


Scrum Terminologies :

USer Story : 

a feature/behaviour/journey/functionality in a software or application

Epic : 

collection of user stories 

Product Backlog : 

contains list of all stories prepared by Product owner

Sprint : 

time period /span to complete the user stories
usually 2-4 weeks 
mostly 2 weeks 

Story point: rough estimatation of user stories  , 
will be given by Dev or QA team 

in the form of fibonacci series

1,2,3,5,8,13 

Scrum master will conduct poker game 

Sprint Backlog :

user stories choosen for particular sprint 

Burndown charts :

how  much work finised or remaining in the sprint .



===============================================
Scrum Ceremonies or meeting 

Sprint planning meeting :

will be conducted before Sprint (capacity planning will be done and user stories will be choosen)

PO , BA , SM , SA , Dev , QA , Dev ops

Daily Scrum Meeting or Daily Stand up or Status call : 

PO , BA , SM , SA , Dev , QA , Dev ops

Every day ( 15 minutes to 30 minutes)

-> what you done so far ?
-> whats the plan for today ?
-> is there any impediments or blocker ?

Sprint Demo or Sprint review :

At the end of sprint

Client/Customer , PO , BA , SM , SA , Dev , QA , Dev ops

Sprint Retrospective or Sprint Retro :

after completion of sprint 

PO , BA , SM , SA , Dev , QA , Dev ops

-> what went well 
-> what doesn't went well 
-> status of action items 


Sprint Backlog grooming or refinement :

during sprint to pick new user stories 


-----------------------------------------------------------
JIRA tool 

Project Management tool 
how to create JIRA account ?

google it for "jira sign up"

Click on "Sign up for free today"

Click on "get ot free"


https://livetech30thmay.atlassian.net/

naveenkumar.alrounder@gmail.com
Newpass@123369







